#! /usr/bin/env python
# -*- coding: utf-8 -*-

# 最大子列和，同时输出第一个和最后一个元素
def MaxSubseqSum(seq):
    '''(list of number) -> None
    问题：最大子列和问题,同时输出最大子列的第一个和最后一个元素
    解决方法：在线处理
    时间复杂度：O(n)

    >>> seq = [-2, 11, -4, 13, -5, -2]
    >>> MaxSubseqSum(seq)
    The first value is: 11
    The last value is: 13
    20
    '''
	left = 0
	right = 0
	cur_left = 0
	cur_right = 0
	mmax = 0
	cur_max = 0
	ok = 0
	for i in range(len(seq)):
		if seq[i]>=0:
			ok = 1
			break
	if ok==0:
		print("0", seq[0], seq[-1])
	else:
		for i in range(len(seq)):
			cur_max += seq[i]
			if cur_max>0:
				cur_right = i
				if mmax<cur_max:
					mmax = cur_max
					left = cur_left
					right = cur_right
			else:
				if i>0 and mmax==0 and cur_max==0:
					left = right = i
				cur_max = 0
				cur_left = cur_right = i+1
		print(mmax, seq[left], seq[right])


if __name__ == '__main__':
    n = int(input())     # 列表长度
    seq = []                # 列表
    getin = input()			# 字符串形式读进来
    seqtemp = []
    seqtemp = getin.split(' ')   # 获取字符
    for i in range(n):
        seq.append(int(seqtemp[i]))

    MaxSubseqSum(seq)
